<Bonfire.UI.Common.OpenModalLive
  reusable_modal_id={if @__context__[:sticky], do: "persistent_modal"}
  id={"modal_verbs_#{@subject_id}"}
  title_text={l("Edit Role") <> " - " <> Atom.to_string(@role_title)}
>
  <div class="mt-4 overflow-x-hidden">
    <div class="alert mb-4 alert-info" role="alert">
      <#Icon solid="InformationCircle" class="w-5 h-5 shrink-0" />
      <span class="">
        {l(
          "You can explicitly enable or disable a verb from this role to grant or forbid a specific permission. 
                By removing the verb from the list, the user will inherit that permission from the other boundaries applied.
                If no other boundaries are present the default will be false."
        )}</span>
    </div>

    <div class="flex flex-col divide-y divide-base-content/10">
      {#for {verb_id, l} <- Enum.concat(@grants || [], @verbs || []) |> Enum.uniq_by(&elem(&1, 0))}
        <div class={
          "flex items-center justify-between gap-6 py-5 px-3",
          "bg-base-content/5": e(l, :value, nil) == nil
        }>
          {#case Bonfire.Boundaries.Verbs.get(verb_id)}
            {#match nil}
              <#Icon iconify="mingcute:hat-fill" class="w-4 h-4 text-secondary-content/70" />

              <div class="flex-1">
                <div class="flex flex-col">
                  <div class="flex-1 text-sm font-medium">
                    {e(l, :verb, :verb, nil) || e(l, :verb, nil)}
                  </div>
                </div>
              </div>
            {#match verb}
              <Iconify.iconify
                icon={e(verb, :icon, "")}
                class="w-4 h-4 text-base-content/70"
                fill="currentColor"
              />

              <div class="flex-1">
                <div class="flex flex-col">
                  <div class="flex-1 text-sm font-medium">
                    {e(l, :verb, :verb, nil) || e(l, :verb, nil)}
                  </div>
                  <p class="text-xs text-base-content/70">{e(verb, :summary, nil)}</p>
                </div>
              </div>
          {/case}

          <div class="flex items-end px-2 py-1 mt-px">
            <Bonfire.UI.Boundaries.YesMaybeFalseLive
              value={e(l, :value, nil)}
              id={"role_#{@subject_id}_#{verb_id}"}
              field_name={"subject[#{@subject_id}][#{verb_id}]"}
              event_target={@myself}
            />
          </div>
        </div>
      {/for}
    </div>
  </div>
  <:open_btn>
    <button type="button" class="text-neutral-content">
      {l("Details")}
    </button>
  </:open_btn>
</Bonfire.UI.Common.OpenModalLive>