<div class="">
  {#if @edit_acl_id}
    <Bonfire.UI.Boundaries.Web.AclLive
      id={@edit_acl_id}
      acl_id={@edit_acl_id}
      parent_back={@myself}
      setting_boundaries={@setting_boundaries}
    />
  {#else}
    <div>
      <div :if={!@setting_boundaries}>
        <div class="p-4 pt-0 border-b border-base-content/10">
          <span class="text-sm text-base-content/70">
            {l(
              "Boundaries define and enforce rules that can be used to control access and permissions to content or functionality. A boundary preset can apply to one or more users and circles."
            )}
          </span>
        </div>
      </div>

      <ul role="list" class="flex flex-col divide-y divide-base-content/10">
        {#for %{id: acl_id} = acl <- e(@acls, []) ++ e(@built_ins, [])}
          <li>
            <LinkLive
              class="block cursor-pointer hover:bg-base-content/5"
              to={if @scope != nil,
                do: ~p"/boundaries/scope/instance/acl/#{id(acl)}",
                else: ~p"/boundaries/acl/#{id(acl)}"}
            >
              <label
                class="flex items-center gap-3 p-5 cursor-pointer"
                phx-click={if @setting_boundaries,
                  do:
                    JS.push(
                      if(not Enum.member?(@to_boundaries_ids, acl_id),
                        do: "Bonfire.Boundaries:select_boundary",
                        else: "Bonfire.Boundaries:remove_boundary"
                      ),
                      value: %{
                        id: acl_id,
                        name:
                          e(acl, :named, :name, nil) || e(acl, :stereotyped, :named, :name, nil) || l("Untitled")
                      },
                      target: "#smart_input"
                    )}
              >
                <#Icon iconify="ph:hand-fill" class="w-6 h-6 text-base-content/70" />
                <div class="flex-1">
                  <div class="flex items-center space-x-4">
                    <div class="font-bold capitalize">{e(acl, :named, :name, nil) || e(acl, :stereotyped, :named, :name, nil) ||
                        l("Untitled")}</div>
                  </div>
                </div>
                <div class="flex ml-4 space-x-2">
                  {#if !@setting_boundaries}
                    {!-- {#if e(acl, :grants_count, 0) > 0} --}
                    <div class="flex gap-1 avatar-group">
                      {#for subject <-
                          Grants.subjects(e(acl, :grants, []))}
                        {#if e(subject, :profile, :id, nil)}
                          <Bonfire.UI.Common.AvatarLive
                            parent_id="acls"
                            src={Media.avatar_url(e(subject, nil))}
                            user_id={id(e(subject, nil))}
                            title={e(subject, :profile, :name, nil) ||
                              e(subject, :character, :username, nil) || id(subject)}
                            class="w-8 h-8"
                            bg_class="rounded-xl"
                          />
                        {#else}
                          <div class="flex items-center gap-3">
                            <span
                              title={e(subject, :named, :name, nil) || e(subject, :stereotyped, :named, :name, nil) ||
                                e(subject, :name, nil) || id(subject)}
                              class="flex items-center w-8 h-8 rounded-full place-content-center bg-info"
                            >
                              <#Icon iconify="fluent:people-list-16-filled" class="inline-block w-5 h-5 text-info-content" />
                            </span>
                          </div>
                        {/if}
                      {/for}
                    </div>
                    {!-- {/if} --}
                    <div class="flex items-center gap-3">
                      <#Icon solid="ChevronRight" class="w-5 h-5" />
                    </div>
                  {#else}
                    <div
                      class="btn btn-ghost btn-sm btn-circle"
                      phx-click="boundary_edit"
                      phx-target={@myself}
                      phx-value-id={acl.id}
                      x-on:click="show_boundary_list = false"
                    >
                      <#Icon solid="ChevronRight" class="w-5 h-5" />
                    </div>

                    <div
                      :if={not Enum.member?(@to_boundaries_ids, acl_id)}
                      class="btn btn-outline btn-sm btn-circle opacity-80"
                    >
                      <#Icon solid="Plus" class="w-5 h-5" />
                    </div>

                    <div
                      :if={@to_boundaries_ids |> Enum.member?(acl_id)}
                      class="btn btn-success btn-sm btn-circle opacity-80"
                    >
                      <#Icon solid="Minus" class="w-5 h-5" />
                    </div>
                  {/if}
                </div>
              </label>
            </LinkLive>
          </li>
        {/for}
      </ul>
      <Bonfire.UI.Common.LoadMoreLive
        :if={@page_info}
        live_handler={__MODULE__}
        page_info={@page_info}
        hide_guest_fallback
        target={@myself}
      />
      <div
        :if={@setting_boundaries}
        :on-click="assign"
        x-on:click="show_boundary_list = false"
        phx-value-section="new"
        class="flex items-center p-2 space-x-4 cursor-pointer hover:bg-base-content/10"
      >
        <div class="btn btn-outline btn-sm btn-circle opacity-80">
          <#Icon solid="Plus" class="w-5 h-5" />
        </div>
        <div class="flex-1">
          <div class="text-base font-normal">{l("Define a new boundary")}</div>
        </div>
        <div class="btn btn-ghost btn-sm btn-circle opacity-80">
          <#Icon solid="ChevronRight" class="w-5 h-5" />
        </div>
      </div>
    </div>
  {/if}
</div>