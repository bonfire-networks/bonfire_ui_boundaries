<Bonfire.UI.Common.OpenModalLive
  no_actions
  :if={@object}
  id={ComponentID.new(
    Bonfire.UI.Common.OpenModalLive,
    "block_#{@parent_id}_#{id(@object)}_#{@type}",
    __MODULE__
  )}
  title_text={@title ||
    l("%{type} %{user_or_instance_name}", type: @type_display, user_or_instance_name: @label)}
>
  {#if @type in [:silence, :hide]}
    {#if !@only_admin}
      {#if Bonfire.Boundaries.Blocks.is_blocked?(@object, :silence, current_user: current_user(@__context__))}
        <div class="text-sm mt-3">{if @type == :silence,
            do:
              l("By unsilencing %{user_or_instance_name}, you will see things they publish again.",
                user_or_instance_name: @label
              ),
            else: l("You have previously hidden %{user_or_instance_name}.", user_or_instance_name: @label)}</div>
        {!-- FIXME? unhide button won't appear because we're not currently adding hidden things to the silence circle --}
        <button
          data-role="unsilence"
          :on-click={"Bonfire.Boundaries.Blocks:un#{@type}"}
          phx-value-id={e(@object, :id, @object)}
          type="button"
          class="btn my-3 w-full btn-warning normal-case"
        >
          {if @type == :silence, do: l("Unsilence"), else: l("Unhide")}
        </button>
      {#else}
        <div class="my-3">
          {#if @type == :hide}
            <div class="text-sm">
              {l(
                "You can hide %{this_object} if you don't want to see it appear ever again. You'll still be able to view it using its full URL if necessary.",
                this_object: @label
              )}</div>
          {#else}
            <div class="text-sm">
              {l("By silencing %{user_or_instance_name}, you will stop seeing things they publish",
                user_or_instance_name: @label
              )}</div>
            <div x-data="{active: false}" role="region" class="text-base-content">
              <button
                type="button"
                x-on:click="active = ! active"
                :aria-expanded="active"
                class="flex mt-1 items-center w-full font-semibold text-sm"
              >
                <span x-show="!active" class="underline">{l("Read more")}</span>
                <span x-show="active" class="underline">{l("Read less")}</span>
                <span x-show="active" aria-hidden="true" class="ml-2">&minus;</span>
                <span x-show="!active" aria-hidden="true" class="ml-2">&plus;</span>
              </button>
              <div x-show="active" x-collapse>
                <div class="block mt-3">
                  <ul class="block pl-4 mt-1 prose-sm list-disc">
                    <li>
                      {l("You won't see anything they write/create in feeds.")}
                    </li>
                    <li>
                      {l("You will still be able to view their profile or read their posts using direct links.")}
                    </li>
                    <li>
                      {l("You won't see any @ mentions or messages they send you.")}
                    </li>
                    <li>
                      {l("You won't be able to follow them.")}
                    </li>
                    <li>
                      {l("You will be able to undo this later but may not be able to see any activities you missed.")}
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          {/if}
        </div>
        <button
          data-role="silence"
          :on-click={"Bonfire.Boundaries.Blocks:#{@type}"}
          phx-value-id={e(@object, :id, @object)}
          type="button"
          class="btn w-full btn-warning normal-case"
        >{@type_display}
        </button>
      {/if}
    {/if}
    {#if !@only_user}
      <div :if={@can_instance_wide?} class="">
        {#if Bonfire.Boundaries.Blocks.is_blocked?(@object, :silence, :instance_wide)}
          <div class="">
            <p class="mt-0 text-sm text-base-content">
              {l("Do you want to unsilence %{user_or_instance_name} instance-wide?",
                user_or_instance_name: @label
              )}
            </p>
          </div>
          <button
            :on-click={"Bonfire.Boundaries.Blocks:un#{@type}_instance_wide"}
            phx-value-id={e(@object, :id, @object)}
            class="btn btn-error mt-3 w-full  normal-case"
          >{if @type == :silence, do: l("Unsilence instance-wide"), else: l("Unhide instance-wide")}</button>
        {#else}
          <div class="flex flex-col p-2 mt-5 space-y-3 border rounded border-error/30 bg-error/5">
            <div class="text-base font-semibold">{l("Super powers")}</div>
            <p class="mt-0 text-sm">
              {l(
                "%{silence} %{user_or_instance_name} for all users of your instance.",
                user_or_instance_name: @label,
                silence: @type_display
              )}
              {if @type == :silence,
                do:
                  l(
                    "All local users will stop seeing %{user_or_instance_name} or their content.",
                    user_or_instance_name: @label
                  )}
            </p>
            <button
              :on-click={"Bonfire.Boundaries.Blocks:#{@type}_instance_wide"}
              phx-value-id={e(@object, :id, @object)}
              class="btn btn-error  btn-outline normal-case"
            >{l("%{silence} instance-wide", silence: @type_display)}</button>
          </div>
        {/if}
      </div>
    {/if}
  {#elseif @type == :ghost}
    {#if !@only_admin}
      {#if Bonfire.Boundaries.Blocks.is_blocked?(@object, :ghost, current_user: current_user(@__context__))}
        <div class="text-sm mt-3">{l("By unghosting %{user_or_instance_name}, they will see things you publish again.",
            user_or_instance_name: @label
          )}</div>
        <button
          data-role="unghost"
          :on-click="Bonfire.Boundaries.Blocks:unghost"
          phx-value-id={e(@object, :id, @object)}
          type="button"
          class="btn my-3  w-full btn-warning normal-case"
        >{l("Unghost")}
        </button>
      {#else}
        <div class="my-3">
          <div class="text-sm">{l(
              "By ghosting %{user_or_instance_name}, you will prevent them from seeing or interacting with you or your content",
              user_or_instance_name: @label
            )}</div>
          <div x-data="{active: false}" role="region" class="text-base-content">
            <button
              type="button"
              x-on:click="active = ! active"
              :aria-expanded="active"
              class="flex mt-1 items-center w-full font-semibold text-sm"
            >
              <span x-show="!active" class="underline">{l("Read more")}</span>
              <span x-show="active" class="underline">{l("Read less")}</span>
              <span x-show="active" aria-hidden="true" class="ml-2">&minus;</span>
              <span x-show="!active" aria-hidden="true" class="ml-2">&plus;</span>
            </button>
            <div x-show="active" x-collapse>
              <div class="block mt-3">
                <ul class="block pl-4 mt-1 prose-sm list-disc">
                  <li>
                    {l("Nothing you post privately will be shown to them from now on (at least on this instance).")}
                  </li>
                  <li>
                    {l("They may still be able to see things you post publicly.")}
                  </li>
                  <li>
                    {l("You won't be able to @ mention or message them.")}
                  </li>
                  <li>
                    {l("They won't be able to follow you.")}
                  </li>
                  <li>
                    {l(
                      "You will be able to undo this later but they may not be able to see any activities they missed."
                    )}
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
        <button
          data-role="ghost"
          :on-click="Bonfire.Boundaries.Blocks:ghost"
          phx-value-id={e(@object, :id, @object)}
          type="button"
          class="btn  w-full btn-warning normal-case"
        >{l("Ghost")}
        </button>
      {/if}
    {/if}
    {#if !@only_user}
      <div :if={@can_instance_wide?} class="">
        {#if Bonfire.Boundaries.Blocks.is_blocked?(@object, :ghost, :instance_wide)}
          <div class="">
            <p class="mt-0 text-sm text-base-content">
              {l("Do you want to unghost %{user_or_instance_name} instance-wide?",
                user_or_instance_name: @label
              )}
            </p>
          </div>
          <button
            :on-click="Bonfire.Boundaries.Blocks:unghost_instance_wide"
            phx-value-id={e(@object, :id, @object)}
            class="btn btn-error mt-3 w-full  normal-case"
          >{l("Unghost instance-wide")}</button>
        {#else}
          <div class="flex flex-col p-2 mt-5 space-y-3 border rounded border-error/30 bg-error/5">
            <div class="text-base font-semibold">{l("Super powers")}</div>
            <p class="mt-0 text-sm">
              {l(
                "You can enforce the ghost for all users of your instance. Prevent %{user_or_instance_name} from seeing or interacting with all local users",
                user_or_instance_name: @label
              )}
            </p>
            <button
              :on-click="Bonfire.Boundaries.Blocks:ghost_instance_wide"
              phx-value-id={e(@object, :id, @object)}
              class="btn btn-error !border-error btn-outline normal-case"
            >{l("Ghost instance-wide")}</button>
          </div>
        {/if}
      </div>
    {/if}
  {#else}
    {#if !@only_admin and
        Bonfire.Boundaries.Blocks.is_blocked?(@object, :silence,
          current_user: current_user(@__context__)
        ) &&
        Bonfire.Boundaries.Blocks.is_blocked?(@object, :ghost, current_user: current_user(@__context__))}
      <div class="text-sm mt-3">{l("By unblocking %{user_or_instance_name}, you will be able to interact together with them.",
          user_or_instance_name: @label
        )}</div>
      <button
        data-role="unblock"
        :on-click="Bonfire.Boundaries.Blocks:unblock"
        phx-value-id={e(@object, :id, @object)}
        type="button"
        class="btn my-3  w-full btn-error normal-case"
      >{l("Unblock")}
      </button>
    {#else}
      <div class="my-3">
        <div class="text-sm">{l(
            "When you feel unsafe, or you tried discussing or flagging problematic people or content and it went nowhere, or you simply came across spam or trolls, you can always resort to blocking."
          )}</div>
      </div>
      <button
        data-role="block"
        :on-click="Bonfire.Boundaries.Blocks:block"
        phx-value-id={e(@object, :id, @object)}
        type="button"
        class="btn  w-full btn-warning normal-case"
      >{l("Block")}
      </button>
    {/if}

    {#if !@only_user}
      <div
        :if={@scope not in [nil, :instance] and
          (Bonfire.Boundaries.can?(@__context__, :block, @scope) ||
             @can_instance_wide?)}
        class=""
      >
        {!-- {#if Bonfire.Boundaries.Blocks.is_blocked?(@object, :silence, @scope) && Bonfire.Boundaries.Blocks.is_blocked?(@object, :ghost, @scope)}
          <div class="">
            <p class="mt-0 text-sm text-base-content/70">
              {l("Do you want to unblock %{user_or_instance_name} instance-wide?",
                user_or_instance_name: @label
              )}
            </p>
          </div>
          <button
            :on-click="Bonfire.Boundaries.Blocks:unblock_scope"
            phx-value-id={e(@object, :id, @object)}
            class="btn btn-error mt-3 w-full  normal-case"
          >{l("Unblock instance-wide")}</button>
        {#else} --}
        <div class="flex flex-col p-2 mt-5 space-y-3 border rounded border-error/30 bg-error/5">
          <div class="text-base font-semibold">{l("Super powers")}</div>
          <p class="mt-0 text-sm">
            {l(
              "You can enforce the block for your group: %{user_or_instance_name} will no longer be able to see or interact with the group or future group activities.",
              user_or_instance_name: @label
            )}
          </p>
          <button
            :on-click="Bonfire.Boundaries.Blocks:block_scoped"
            phx-value-id={e(@object, :id, @object)}
            phx-value-scope={id(@scope) || @scope}
            class="btn btn-error  btn-outline normal-case"
          >{l("Block from the group")}</button>
        </div>
        {!-- {/if} --}
      </div>

      <div :if={@can_instance_wide?} class="">
        {#if Bonfire.Boundaries.Blocks.is_blocked?(@object, :silence, :instance_wide) &&
            Bonfire.Boundaries.Blocks.is_blocked?(@object, :ghost, :instance_wide)}
          {#case if(is_nil(@is_local_user), do: is_local?(@object), else: @is_local_user)}
            {#match true}
              <div class="">
                <p class="mt-0 text-sm text-base-content">
                  {l("Do you want to unblock and re-enable %{user_or_instance_name} so they can use the instance?",
                    user_or_instance_name: @label
                  )}
                </p>
              </div>
              <button
                :on-click="Bonfire.Boundaries.Blocks:unblock_instance_wide"
                phx-value-id={e(@object, :id, @object)}
                class="btn btn-error mt-3 w-full  normal-case"
              >{l("Re-enable user")}</button>
            {#match _}
              <div class="">
                <p class="mt-0 text-sm text-base-content">
                  {l("Do you want to unblock %{user_or_instance_name} instance-wide?",
                    user_or_instance_name: @label
                  )}
                </p>
              </div>
              <button
                :on-click="Bonfire.Boundaries.Blocks:unblock_instance_wide"
                phx-value-id={e(@object, :id, @object)}
                class="btn btn-error mt-3 w-full  normal-case"
              >{l("Unblock instance-wide")}</button>
          {/case}
        {#else}
          <div class="flex flex-col p-2 mt-5 space-y-3 border rounded border-error/30 bg-error/5">
            <div class="text-base font-semibold">{l("Super powers")}</div>
            {#case if(is_nil(@is_local_user), do: is_local?(@object), else: @is_local_user)}
              {#match true}
                <p class="mt-0 text-sm">
                  {l(
                    "You can block %{user_or_instance_name} from signing in to the instance. If they have an account with several profiles this will prevent them from using any of them.",
                    user_or_instance_name: @label
                  )}
                </p>
                <button
                  :on-click="Bonfire.Boundaries.Blocks:block_instance_wide"
                  phx-value-id={e(@object, :id, @object)}
                  class="btn btn-error  normal-case"
                >{l("Disable this user")}</button>
              {#match _}
                <p class="mt-0 text-sm">
                  {l(
                    "You can enforce the block for all users of your instance. All local users will stop interact with %{user_or_instance_name} or their content",
                    user_or_instance_name: @label
                  )}
                </p>
                <button
                  :on-click="Bonfire.Boundaries.Blocks:block_instance_wide"
                  phx-value-id={e(@object, :id, @object)}
                  class="btn btn-error  btn-outline normal-case"
                >{l("Block instance-wide")}</button>
            {/case}
          </div>
        {/if}
      </div>
    {/if}
  {/if}

  {!-- <:action_btns>
      <button data-id="block" type="submit" class="normal-case rounded btn btn-error btn-sm">
        <span class="text-left truncate ellipsis">{l("Block %{user_or_instance_name}", user_or_instance_name: @label)}</span>
      </button>
    </:action_btns> --}

  <:open_btn>
    <div class={e(@class, "btn btn-sm flex items-center gap-2 btn-outline ")}>
      <#Icon
        :if={@with_icon && @type == :ghost}
        iconify="mingcute:ghost-fill"
        class="w-4 h-4 stroke-1 text-base-content/70"
      />
      <#Icon
        :if={@with_icon && @type == :silence}
        iconify="heroicons-solid:volume-off"
        class="w-4 h-4 stroke-1 text-base-content/70"
      />
      <#Icon
        :if={@with_icon && @type == :block}
        iconify="heroicons-solid:ban"
        class="w-4 h-4 stroke-1 text-base-content/70"
      />
      <#Icon
        :if={@with_icon && @type == :hide}
        iconify="heroicons-solid:eye-off"
        class="w-4 h-4 stroke-1 text-base-content/70"
      />

      <span :if={!@hide_text} class="text-left truncate ellipsis">
        {@open_btn_label ||
          l("%{type} %{user_or_instance_name}", type: @type_display, user_or_instance_name: @label)}
      </span>
    </div>
  </:open_btn>
</Bonfire.UI.Common.OpenModalLive>
