<div>
  <div id="circles_list" class="">
    <div class="font-medium text-base">{l("Select the circle(s) you want %{name} to be in", name: @name || l("this user"))}</div>
    <button
      phx-click={JS.toggle(to: "#circles_list")
      |> JS.toggle(to: "#new_circle_from_modal")}
      class="btn btn-sm btn-primary btn-soft mt-4"
    >
      <#Icon solid="Plus" class="w-4 h-4" />
      <span>{l("Create a new circle")}</span>
    </button>

    <ul class="menu p-0 w-full gap-1 mt-3">
      {#if Enum.empty?(@circles)}
        <Bonfire.UI.Common.EmptyFeed feedback_title={l("You need to create at list one circle")} />
      {#else}
        {#for circle <- e(@circles, [])}
          {#if e(circle, :encircle_subjects, nil)}
            <li class="bg-base-content/5 rounded-xl">
              <button
                class="flex !px-2 items-center justify-between"
                data-role="remove_from_circle"
                phx-value-id={@user_id}
                phx-value-circle={id(circle)}
                :on-click="remove"
                type="button"
              >
                <div class="flex items-center gap-3">
                  <div class="w-10 h-10 flex place-content-center items-center rounded bg-info/10">
                    <#Icon iconify="ph:circle-duotone" class="w-5 h-5 text-base-content" />
                  </div>
                  <div class="">
                    <div class="flex flex-col">
                      <p class="text-sm font-bold capitalize truncate">{e(circle, :named, :name, nil)}</p>
                      {#case e(circle, :encircles_count, 0)}
                        {#match 0}
                        {#match encircles_count}
                          <span class="text-xs font-normal text-base-content/70">{encircles_count} {l("members")}</span>
                      {/case}
                    </div>
                  </div>
                </div>
                <#Icon iconify="fluent:checkmark-16-filled" class="w-4 h-4 text-success mr-2" />
              </button>
            </li>
          {#else}
            <li class="">
              <button
                data-role="add_to_circle"
                phx-value-id={@user_id}
                phx-value-circle={id(circle)}
                :on-click="add"
                type="button"
                class="flex !px-2 items-center justify-between"
              >
                <div class="flex items-center gap-3">
                  <div class="w-10 h-10 flex place-content-center items-center rounded bg-info/10">
                    <#Icon iconify="ph:circle-duotone" class="w-5 h-5 text-base-content" />
                  </div>
                  <div class="">
                    <div class="flex flex-col">
                      <p class="text-sm font-bold capitalize truncate">{e(circle, :named, :name, nil)}</p>
                      {#case e(circle, :encircles_count, 0)}
                        {#match 0}
                        {#match encircles_count}
                          <span class="text-xs font-normal text-base-content/70">{encircles_count} {l("members")}</span>
                      {/case}
                    </div>
                  </div>
                </div>
              </button>
            </li>
          {/if}
        {/for}
      {/if}
    </ul>
  </div>
  <div id="new_circle_from_modal" class="hidden">
    <div class="gap-2 px-3 flex items-center">
      <button
        phx-click={JS.toggle(to: "#new_circle_from_modal")
        |> JS.toggle(to: "#circles_list")}
        type="button"
        class="btn btn-sm btn-ghost btn-circle"
      >
        <#Icon iconify="ion:chevron-back" class="w-5 h-5 text-base-content/70" />
      </button>
      <div class="font-bold text-base">{l("Create a new circle")}</div>
    </div>
    <form
      phx-target={@myself}
      phx-submit={JS.push("circle_create_from_modal")
      |> JS.toggle(to: "#new_circle_from_modal")
      |> JS.toggle(to: "#circles_list")}
      class="px-3"
    >
      <Bonfire.UI.Boundaries.NewCircleLive setting_boundaries={false} />
    </form>
  </div>
</div>
