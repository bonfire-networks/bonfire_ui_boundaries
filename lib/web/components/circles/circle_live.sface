<div
  id="circle_view"
  class="w-full max-w-full flex flex-col feed w-full max-w-full bg-base-100"
>
  <header class="flex flex-col px-4 pt-2 pb-0 border-b border-base-content/10">
    <div class="flex items-start gap-4">
      <#Icon iconify="ph:circle-duotone" class="w-12 h-12 rotate-15 text-secondary stroke-1" />
      <div class="flex justify-center justify-between w-full items-start flex-1">
        <div class="flex flex-1 flex-col">
          <div class="text-xl font-bold">{e(@circle, :named, :name, nil)}</div>
          <div class="text-sm text-base-content/70">{l("Circle created by ")} <LinkLive class="link text-base-content" to={"/@#{e(@circle, :creator_username, nil)}"}>{e(@circle, :creator_name, "")}</LinkLive></div>

          {#if description = e(@circle, :extra_info, :summary, nil)}
            <div class="text-base-content/70 mt-4">{description}</div>
          {/if}
        </div>

        <div class="flex items-center gap-2">
          <!-- <div>
            <StatelessComponent
              module={maybe_component(Bonfire.UI.Boundaries.BoundaryIconStatelessLive)}
              object={@circle}
              class="btn btn-sm btn-circle"
              object_type={Bonfire.Data.AccessControl.Circle}
              object_boundaries={@to_boundaries}
              boundary_preset={@boundary_preset}
            />
          </div> -->

          {#if @is_caretaker}
            <div data-role="edit_circle_name" class="edit_name">
              <Bonfire.UI.Common.OpenModalLive
                id="edit_name"
                title_text={l("Edit circle")}
                no_actions
                open_btn_wrapper_class="flex flex-1 w-full"
              >
                <Bonfire.UI.Boundaries.ManageCircleLive
                  id={"members_#{@circle_id || id(@circle)}"}
                  circle_id={@circle_id || id(@circle)}
                  circle={@circle}
                  read_only={@read_only}
                  to_boundaries={@to_boundaries}
                  boundary_preset={@boundary_preset}
                />

                <:open_btn>
                  <div class="btn btn-sm btn-primary btn-soft btn-circle">
                    <#Icon iconify="ph:sliders-horizontal-duotone" class="w-5 h-5" />
                    <span class="sr-only">{l("Edit circle")}</span>
                  </div>
                </:open_btn>
              </Bonfire.UI.Common.OpenModalLive>
            </div>
          {/if}
        </div>
      </div>
    </div>
    <div role="tablist" class="tabs pt-8 justify-evenly w-full tabs-border">
      <LinkLive
        to={"/circle/#{id(@circle)}"}
        role="tab"
        class={"tab", "tab-active": @selected_tab != "members"}
      >{l("Feed")}</LinkLive>
      <LinkLive
        to={"/circle/#{id(@circle)}/members"}
        role="tab"
        class={"tab", "tab-active": @selected_tab == "members"}
      >{l("Members")}</LinkLive>
    </div>
  </header>

  <section class="flex flex-col gap-2 divide-y divide-base-content/10">
    {#if @selected_tab == "members"}
      <div class="pull-right">
        <Bonfire.UI.Boundaries.CircleMembersLive
          id={"members_#{@circle_id || id(@circle)}"}
          circle_id={@circle_id || id(@circle)}
          circle={@circle}
          read_only={@read_only}
          with_batch_follow
        />
      </div>
      <!-- 
      {#for %{id: id} = member <- @members}
        <div class="p-4">
          <StatelessComponent
            module={maybe_component(Bonfire.UI.Me.ProfileItemLive)}
            profile={e(member, :subject, :profile, nil)}
            avatar_class="w-10 h-10 rounded-full"
            character={e(member, :subject, :character, nil)}
            with_summary
          />
          
        </div>
      {/for}

      <Bonfire.UI.Common.LoadMoreLive
        live_handler="Bonfire.Boundaries.Circles"
        page_info={@page_info}
        infinite_scroll={false}
        hide_if_no_more
        hide_guest_fallback={socket_connected?(@__context__)}
      >
        <:if_no_more>
          <p>{l("That's all the members...")}</p>
        </:if_no_more>
      </Bonfire.UI.Common.LoadMoreLive> -->
    {#else}
      <StatefulComponent
        module={maybe_component(Bonfire.UI.Social.FeedLive, @__context__)}
        id={ComponentID.new(Bonfire.UI.Social.FeedLive, @feed_name, __MODULE__)}
        feed_filters={@feed_filters}
        feed_name={@feed_name}
        feed_title={@feed_title}
        showing_within={:circle}
        hide_filters
      />
    {/if}
  </section>
</div>