<div class="w-full max-w-full flex flex-col feed w-full max-w-full lg:rounded-xl lg:shadow bg-base-100">
  <header class="flex flex-col p-8 pb-0 border-b border-base-content/10">
    <div class="flex items-start gap-4">
      <#Icon iconify="gravity-ui:square-list-ul" class="w-12 h-12 rotate-15 text-secondary stroke-1" />
      <div class="flex justify-center justify-between w-full items-start flex-1">
        <div class="flex flex-1 flex-col">
          <div class="text-xl font-bold">{e(@circle, :named, :name, nil)}</div>
          <div class="text-sm text-base-content/70">{l("Circle shared by ")} <LinkLive class="link text-base-content" to={"/@#{e(@circle, :creator_username, nil)}"}>{e(@circle, :creator_name, "")}</LinkLive></div>

          {#if description = e(@circle, :extra_info, :summary, nil)}
            <div class="text-base-content/70 mt-4">{description}</div>
          {/if}
        </div>

        <StatefulComponent
          module={maybe_component(Bonfire.UI.Boundaries.BoundaryIconLive)}
          with_label
          id={"boundary_#{@circle_id || id(@circle)}"}
          object={@circle}
          object_type={Bonfire.Data.AccessControl.Circle}
        />

        <Link
          :if={e(@circle, :creator_id, nil) == current_user_id(@__context__)}
          to={~p"/boundaries/scope/user/circle/#{id(@circle)}"}
          class="btn btn-primary btn-sm btn-circle btn-soft"
        >
          <#Icon iconify="ph:gear-fill" class="w-4 h-4" />
          <!-- {l("Edit circle")}</Link> -->
        </Link>
      </div>
    </div>
    <div role="tablist" class="tabs pt-8 justify-evenly w-full tabs-border">
      <LinkLive
        to={"/circle/#{id(@circle)}"}
        role="tab"
        class={"tab", "tab-active": @selected_tab != "members"}
      >{l("Feed")}</LinkLive>
      <LinkLive
        to={"/circle/#{id(@circle)}/members"}
        role="tab"
        class={"tab", "tab-active": @selected_tab == "members"}
      >{l("Members")}</LinkLive>
    </div>
  </header>

  <section class="flex flex-col gap-2 divide-y divide-base-content/10">
    {#if @selected_tab == "members"}
      <!-- <form
        :if={e(@circle, :creator_id, nil) == id(current_user(@__context__))}
        id="edit_circle_participant"
        :on-change="multi_select"
        class="p-4 bg-base-300 w-full flex-1"
      >
        <label for={"multi_select_#{__MODULE__}_text_input"} class="sr-only">{l("Search for users to add")}</label>
        <div class="relative">
          <Bonfire.UI.Common.MultiselectLive
            implementation={:live_select}
            event_target="#circle_preview"
            form_input_name={__MODULE__}
            form={:add_to_circles}
            label={l("Search for circles or users to add")}
          />
        </div>
      </form> -->

      {#for %{id: id} = member <- @members}
        <div class="p-4">
          <StatelessComponent
            module={maybe_component(Bonfire.UI.Me.ProfileItemLive)}
            profile={e(member, :subject, :profile, nil)}
            avatar_class="w-10 h-10 rounded-full"
            character={e(member, :subject, :character, nil)}
            with_summary
          />
        </div>
      {/for}

      <Bonfire.UI.Common.LoadMoreLive
        live_handler="Bonfire.Boundaries.Circles"
        page_info={@page_info}
        infinite_scroll={false}
        hide_if_no_more
        hide_guest_fallback={socket_connected?(@__context__)}
      >
        <:if_no_more>
          <p>{l("That's all the members...")}</p>
        </:if_no_more>
      </Bonfire.UI.Common.LoadMoreLive>
    {#else}
      <StatefulComponent
        module={maybe_component(Bonfire.UI.Social.FeedLive, @__context__)}
        id={ComponentID.new(Bonfire.UI.Social.FeedLive, @feed_name, __MODULE__)}
        feed_filters={@feed_filters}
        feed_name={@feed_name}
        feed_title={@feed_title}
        showing_within={:circle}
        hide_filters
      />
    {/if}
  </section>

  <!-- <div>
      <div class="mb-2">
        <StatelessComponent
          module={maybe_component(Bonfire.UI.Me.WidgetUsersLive, @__context__)}
          users={@members}
          widget_title={e(@circle, :named, :name, nil)}
        />
      </div>

      {!-- TODO
      <Bonfire.UI.Common.LoadMoreLive
        :if={@page_info}
        live_handler={__MODULE__}
        target={@myself}
        page_info={@page_info}
        hide_guest_fallback
      /> --}
    </div> -->
</div>