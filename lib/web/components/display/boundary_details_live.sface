<div x-data="{edit: false}">
  <div x-show="!edit">
    <div class="border border-base-content/10 mb-3 rounded-box w-full">
      <div class="flex items-center w-full p-4 gap-3">
        <Bonfire.UI.Boundaries.Web.BoundariesPresetNameLive
          boundary_preset={@boundary_preset}
          with_description
        />
      </div>
    </div>

    <Bonfire.UI.Boundaries.Web.YourRoleLive
      is_caretaker={@is_caretaker}
      role_name={@role_name}
      scope={@scope}
      role_permissions={@role_permissions}
      label={l("Your role")}
    />
  </div>

  {#if @is_caretaker}
    {#if @object_id}
      <button
        x-show="!edit"
        type="button"
        x-on:click="edit = !edit"
        type="button"
        class="btn btn-sm btn-outline float-right"
      >
        {l("Edit boundaries")}
      </button>
      <button
        x-show="edit"
        type="button"
        x-on:click="edit = !edit"
        class="btn btn-sm btn-outline float-right"
      >
        {l("Done")}
      </button>
    {/if}

    <div x-show="!edit">
      {#if (is_list(@to_circles) and @to_circles != []) or
          (is_list(@exclude_circles) and @exclude_circles != [])}
        {!--
          WIP: https://github.com/bonfire-networks/bonfire-app/issues/630
          NOTE: we set read_only here because editing only happens in AclLive
           --}
        <!-- <Bonfire.UI.Boundaries.Web.SetBoundariesLive
          read_only
          is_caretaker={@is_caretaker}
          to_boundaries={@to_boundaries}
          to_circles={@to_circles}
          exclude_circles={@exclude_circles}
        /> -->
      {/if}
    </div>

    <div x-show="edit" :if={@object_id}>
      {#if is_list(@custom_acls) and @custom_acls != []}
        <div :for={acl <- @custom_acls}>
          <Bonfire.UI.Boundaries.Web.AclLive
            id={"set_acl_#{id(acl)}"}
            setting_boundaries
            acl_id={id(acl)}
            acl={acl}
          />
          <!-- read_only={@read_only} -->
        </div>
      {/if}

      <details class="dropdown">
        <summary class="btn btn-active btn-outline btn-sm">
          {l("Add a boundary preset")}
        </summary>
        <ul class="z-[1] menu shadow bg-base-200 rounded-lg p-0">
          <Bonfire.UI.Boundaries.Web.BoundariesGeneralAccessLive
            set_action="Bonfire.UI.Boundaries:add_object_acl"
            set_opts={%{"phx-value-object_id" => @object_id}}
            boundary_preset={@boundary_preset}
            my_acls={e(@__context__, :my_acls, nil) ||
              LiveHandler.my_acls(current_user_id(@__context__), Bonfire.Boundaries.Acls.opts_for_dropdown())}
            include_stereotypes
            hide_presets
            hide_custom
            is_dropdown
          />
        </ul>
      </details>

      {#if is_list(@preset_acls) and @preset_acls != []}
        <ul class="flex flex-col divide-y divide-base-content/10 px-4 mt-2">
          <li :for={acl <- @preset_acls} class="flex items-center justify-between py-4">
            <div class="flex items-center gap-3">
              <span class="flex items-center w-10 h-10 rounded-full place-content-center bg-info/10">
                <#Icon iconify="ph:hand-fill" class="inline-block w-5 h-5 text-base-content" />
              </span>
              <div class="text-sm truncate max-w-full font-medium text-base-content">{e(acl, :named, :name, nil) || e(acl, :stereotyped, :named, :name, nil)}</div>
            </div>

            <div class="flex items-center gap-2">
              <div class="dropdown dropdown-end">
                <label tabindex="0" class="rounded btn btn-square btn-ghost btn-sm">
                  <#Icon solid="DotsVertical" class="w-4 h-4" />
                </label>
                <ul tabindex="0" class="w-48 p-1 rounded shadow dropdown-content menu menu-compact bg-base-200">
                  <li data-role="remove_from_boundary">
                    <Bonfire.UI.Common.OpenModalLive
                      id={"remove_acl_#{id(acl)}"}
                      title_text={l("Remove preset from boundary")}
                      no_actions
                      open_btn_wrapper_class="flex flex-1 w-full"
                    >
                      <div class="prose prose-sm mt-2">
                        {l("Are you sure to remove %{name} from this object's boundary?",
                          name: e(acl, :named, :name, nil) || e(acl, :stereotyped, :named, :name, nil)
                        )}
                      </div>
                      <button
                        data-role="remove_from_boundary_btn"
                        phx-click={JS.push("Bonfire.UI.Boundaries:remove_object_acl",
                          value: %{
                            acl_id: id(acl),
                            object_id: @object_id
                          },
                          target: @phx_target
                        )}
                        class="w-full mt-3 normal-case btn btn-error"
                        type="button"
                      >
                        {l("Remove")}
                      </button>
                      <:open_btn>
                        <button type="button" data-role="remove_from_boundary_modal" class="text-base-content">{l("Remove")}</button>
                      </:open_btn>
                    </Bonfire.UI.Common.OpenModalLive>
                  </li>
                </ul>
              </div>
            </div>
          </li>
        </ul>
      {/if}
    </div>
  {/if}
</div>
