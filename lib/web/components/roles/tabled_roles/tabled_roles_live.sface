<div class="w-full bg-base-content/5 relative overflow-y-visible overflow-x-auto">
  {#if Enum.count(@roles_with_verbs || []) > 0}
    <table class="table table-zebra">
      <thead class="text-xs uppercase sticky top-0 z-10 bg-base-100">
        <tr>
          <th class="sticky left-0 z-20 bg-base-100/70 backdrop-blur-sm">{l("Role")}</th>
          <th class="text-center font-medium" :for={verb <- @verb_order}>{verb}</th>
          <th class="sticky right-0 z-20 bg-base-100/70 backdrop-blur-sm" />
        </tr>
      </thead>
      <tbody>
        <tr :for={{role, verbs} <- @roles_with_verbs || []}>
          <td class="sticky left-0 z-10 bg-base-100/70 backdrop-blur-sm min-w-[180px] h-full gap-2 max-w-[180px] truncate ellipsis">
            {#if @selectable}
              <div class="flex w-full items-center gap-2">
                <input
                  class="radio radio-xs"
                  type="radio"
                  id={"role_#{role}"}
                  checked={@role == role}
                  value={to_string(role)}
                  name={"#{@field}[#{@circle_id}]"}
                  phx-target={@event_target}
                />
                <label for={"role_#{role}"} class="flex-1">
                  <span class="label-text">{Recase.to_title(to_string(role))}</span>
                </label>
              </div>
            {#else}
              {Recase.to_title(to_string(role))}
            {/if}
          </td>
          {#if e(assigns, :read_only, nil) != true}
            <td :for={{verb, status} <- verbs || []}>
              <Bonfire.UI.Boundaries.YesMaybeFalseLive
                value={status}
                read_only={@read_only}
                event_target={@myself}
                role={role}
                verb={verb}
              />
            </td>
          {#else}
            <td :for={{verb, status} <- verbs || []}>
              {#case status}
                {#match :can}
                  <div data-value={"#{role}_#{verb}_can"}>
                    <#Icon iconify="carbon:checkmark-filled" class="text-success text-center mx-auto w-5 h-5" />
                    <span class="sr-only">{l("Can")}</span>
                  </div>
                {#match :cannot}
                  <div data-value={"#{role}_#{verb}_cannot"}>
                    <#Icon iconify="bx:block" class="text-error text-center mx-auto w-5 h-5" />
                    <span class="sr-only">{l("Cannot")}</span>
                  </div>
                {#match _}
                  <div data-value={"#{role}_#{verb}_undefined"}>
                    <#Icon iconify="heroicons-solid:minus" class="text-base-content/30 w-5 h-5 text-center mx-auto" />
                    <span class="sr-only">{l("Undefined")}</span>
                  </div>
              {/case}
            </td>
          {/if}
          <td
            :if={e(assigns, :read_only, nil) != true}
            class="sticky right-0 z-10 bg-base-100/70 backdrop-blur-sm flex items-center gap-2 justify-end pr-0"
          >
            <Bonfire.UI.Common.OpenModalLive
              id={"edit_role_#{role}"}
              title_text={l("Role Details")}
              no_actions
            >
              <form id={"edit_role_form_#{role}"} phx-submit="Bonfire.Boundaries:role_edit_details">
                <div class="w-full mt-4 form-control">
                  <label for="new_name" class="label">
                    <span class="label-text">{l("Edit the role name")}</span>
                  </label>
                  <input type="hidden" name="old_name" value={role}>
                  <input
                    type="text"
                    id="new_name"
                    name="new_name"
                    value={role}
                    class="w-full input input-bordered"
                  />
                </div>
                <button type="submit" class="btn w-full btn-primary mt-4">
                  {l("Save")}
                </button>
              </form>

              <div class="w-full mt-4 rounded-lg p-4 bg-error/10">
                <div class="flex items-center gap-2">
                  <#Icon iconify="heroicons-solid:exclamation-circle" class="text-error w-6 h-6" />
                  <h4 class="text-error font-medium">{l("Delete the '%{role}' role", role: role)}</h4>
                </div>
                <p class="text-error mt-2 text-sm">
                  {l("Warning:This action cannot be undone.")}
                </p>
                <form id={"delete_role_form_#{role}"} phx-submit="Bonfire.Boundaries:role_delete">
                  <input type="hidden" name="name" value={role}>
                  <button type="submit" class="btn w-full btn-error mt-4">
                    {l("Delete")}
                  </button>
                </form>
              </div>

              <:open_btn>
                <div class="btn btn-sm btn-circle btn-ghost">
                  <#Icon iconify="ph:gear-fill" class="w-4 h-4 opacity-80" />
                  <span class="sr-only">{l("Edit role")}</span>
                </div>
              </:open_btn>
            </Bonfire.UI.Common.OpenModalLive>
          </td>
        </tr>
      </tbody>
    </table>
  {#else}
    <Bonfire.UI.Common.EmptyFeed
      feedback_title={l("There are not roles yet")}
      feedback_message={l("Add some roles to get started!")}
    />
  {/if}
</div>