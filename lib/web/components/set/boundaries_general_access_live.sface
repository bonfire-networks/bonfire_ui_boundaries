{!-- style="min-height: 320px; height: 360px" --}
<div class="h-full flex-1">
  <div class={
    "boundaries_general_access menu flex flex-col gap-1 flex-1 h-full flex-nowrap overflow-y-auto",
    "dropdown-content z-[99999] mt-1 !gap-2 !menu-sm p-1.5 shadow bg-base-200 rounded-box w-[328px]":
      @is_dropdown
  }>
    <div class="items-start text-left text-xs font-semibold uppercase text-base-content/70 px-2 pt-2">{l("General access")}</div>
    {#if !@hide_presets}
      {!-- PUBLIC --}
      <div class={
        "flex items-center gap-3  rounded-lg justify-between hover:bg-base-content/5",
        "bg-base-content/5": matches?(@boundary_preset, "public")
      }>
        <button
          class="text-base-content w-full p-2"
          phx-click={@set_action ||
            JS.push("Bonfire.Boundaries:replace_boundary",
              value: %{id: "public", name: l("Public")},
              target: "#smart_input"
            )}
          phx-value-id="public"
          phx-value-name={l("Public")}
          type="button"
          {...@set_opts}
        >
          <div class="flex items-center gap-2">
            {!-- <input
            :if={!@is_dropdown}
            type="radio"
            name="radio-1"
            class="radio"
            checked={matches?(@boundary_preset, "public")}
          /> --}
            <div class="pr-2 flex items-center text-left">
              <div class="flex-shrink-0">
                <span class="text-xl">
                  <#Icon iconify="ph:globe" class={"w-5 h-5 text-base-content/70", "!w-4 !h-4": @is_dropdown} />
                </span>
              </div>
              <div class="flex flex-col ml-3">
                <div class="text-sm font-semibold text-base-content/90">{l("Public")}</div>
                <p class="text-xs text-base-content/70">
                  {l("Publicly visible to everyone. Discoverable by search engines.")}
                </p>
              </div>
            </div>
          </div>
        </button>
        <div
          :if={!@is_dropdown and !@hide_custom}
          class="flex items-center gap-3 border-l border-base-content/30 pl-1"
        >
          <button
            type="button"
            phx-click={JS.toggle(to: "#extra_boundaries")
            |> JS.toggle(to: "#composer_container")
            |> JS.push("Bonfire.Boundaries:custom_from_preset_template",
              value: %{boundary: "public", name: l("Public")},
              target: "#smart_input"
            )}
            class="btn btn-xs btn-ghost normal-case btn-circle"
            title={l("Customise or add extra boundaries")}
          >
            <#Icon iconify="ri:settings-4-line" class="w-4 h-4 text-base-content/70" />
            <span class="sr-only">{l("Customise")}</span>
          </button>
        </div>
      </div>

      {!-- LOCAL --}
      <div class={
        "flex items-center gap-3  rounded-lg justify-between hover:bg-base-content/5",
        "bg-base-content/5": matches?(@boundary_preset, "local")
      }>
        <button
          data-scope="local_boundary"
          class="text-base-content p-2 w-full"
          phx-click={@set_action ||
            JS.push("Bonfire.Boundaries:replace_boundary",
              value: %{id: "local", name: l("Local")},
              target: "#smart_input"
            )}
          phx-value-id="local"
          phx-value-name={l("Local")}
          type="button"
          {...@set_opts}
        >
          <div class="flex items-center gap-2">
            {!-- <input
            :if={!@is_dropdown}
            type="radio"
            name="radio-1"
            class="radio"
            checked={matches?(@boundary_preset, "local")}
          /> --}
            <div class="flex items-center text-left">
              <div class="flex-shrink-0">
                <span class="text-xl">
                  <#Icon
                    iconify="ph:campfire-bold"
                    class={"w-5 h-5 text-base-content/70", "!w-4 !h-4": @is_dropdown}
                  />
                </span>
              </div>
              <div class="flex flex-col ml-3">
                <div class="text-sm font-semibold text-base-content/90">{l("Local")}</div>
                <p class="text-xs text-base-content/70">
                  {l("Everyone on this instance will be able to see, interact, and reply.")}
                </p>
              </div>
            </div>
          </div>
        </button>
        <div
          :if={!@is_dropdown and !@hide_custom}
          class="flex items-center gap-3 border-l border-base-content/30 pl-1"
        >
          <button
            type="button"
            phx-click={JS.toggle(to: "#extra_boundaries")
            |> JS.toggle(to: "#composer_container")
            |> JS.push("Bonfire.Boundaries:custom_from_preset_template",
              value: %{boundary: "local", name: l("Local")},
              target: "#smart_input"
            )}
            class="btn btn-xs btn-ghost normal-case btn-circle"
            title={l("Customise or add extra boundaries")}
          >
            <#Icon iconify="ri:settings-4-line" class="w-4 h-4 text-base-content/70" />
            <span class="sr-only">{l("Customise")}</span>
          </button>
        </div>
      </div>

      {!-- MENTIONS --}
      <!-- <div class={
        "flex items-center gap-3 p-2 justify-between rounded-lg hover:bg-base-content/5",
        "bg-base-content/5": matches?(@boundary_preset, "mentions")
      }>
        <button
          class="text-base-content"
          phx-click={@set_action ||
            JS.push("Bonfire.Boundaries:replace_boundary",
              value: %{id: "mentions", name: l("Mentions")},
              target: "#smart_input"
            )}
          phx-value-id="mentions"
          phx-value-name={l("Mentions")}
          type="button"
          {...@set_opts}
        >
          <div class="flex items-center gap-2">
            <div class="flex items-center text-left">
              <div class="flex-shrink-0">
                <#Icon iconify="ri:at-line" class={"w-5 h-5 text-base-content/70", "!w-4 !h-4": @is_dropdown} />
                {!-- <span class={"text-2xl", "!text-lg": @is_dropdown}>ï¹«</span> --}
              </div>
              <div class="flex flex-col ml-3">
                <div class="text-sm font-semibold text-base-content/90">{l("Mentions")}</div>
                <p class="text-xs text-base-content/70">
                  {l("Anyone mentioned will be able to see, interact, and reply.")}
                </p>
              </div>
            </div>
          </div>
        </button>
      </div> -->
    {/if}

    {!-- CUSTOM --}
    {#for {acl_id, acl} <- @my_acls}
      <div class={
        "flex items-center gap-3 justify-between rounded-lg hover:bg-base-content/5",
        "bg-base-content/5": matches?(@to_boundaries, acl_id)
      }>
        <button
          class="w-full p-2 text-base-content"
          phx-click={@set_action ||
            JS.push("Bonfire.Boundaries:replace_boundary",
              value: %{id: acl_id, name: e(acl, :name, nil)},
              target: "#smart_input"
            )}
          phx-value-id={acl_id}
          phx-value-name={e(acl, :name, nil)}
          type="button"
          {...@set_opts}
        >
          <div class="flex items-center gap-2">
            {!-- <input
              :if={!@is_dropdown}
              type="radio"
              name="radio-1"
              class="radio"
              checked={matches?(@to_boundaries, acl_id)}
            /> --}
            <div class="flex items-center text-left">
              <div class="flex-shrink-0">
                <span class="text-xl">
                  {#case e(acl, :icon, nil)}
                    {#match nil}
                      <#Icon
                        iconify="fluent:door-tag-20-filled"
                        class={"w-5 h-5 text-base-content/70", "!w-4 !h-4": @is_dropdown}
                      />
                    {#match icon}
                      <Iconify.iconify icon={icon} class={"w-5 h-5 text-base-content/70", "!w-4 !h-4": @is_dropdown} />
                  {/case}
                </span>
              </div>
              <div class="flex flex-col ml-3">
                <div class="text-sm font-semibold text-base-content/90">{e(acl, :name, nil)}</div>
                <p class="text-xs text-base-content/70">{e(acl, :description, "A custom boundary")}</p>
              </div>
            </div>
          </div>
        </button>

        <div
          :if={!@is_dropdown and !@hide_custom}
          class="flex items-center gap-3 border-l border-base-content/30 pl-1"
        >
          <button
            type="button"
            phx-click={JS.toggle(to: "#extra_boundaries")
            |> JS.toggle(to: "#composer_container")
            |> JS.push("Bonfire.Boundaries:custom_from_preset_template",
              value: %{boundary: acl_id, name: e(acl, :name, nil)},
              target: "#smart_input"
            )}
            class="btn btn-xs btn-ghost normal-case btn-circle"
            title={l("Customise or add extra boundaries")}
          >
            <#Icon iconify="ri:settings-4-line" class="w-4 h-4 text-base-content/70" />
            <span class="sr-only">{l("Customise")}</span>
          </button>
        </div>
      </div>
    {/for}

    {!-- <div class="my-3 px-2 text-left items-start border-t border-base-content/10">
      <div class="items-start text-left text-xs font-semibold uppercase text-base-content/70 mb-2 pt-4">{l "Specific access"}</div>
      <StatefulComponent
        :if={Bonfire.Boundaries.Web.SetBoundariesButtonLive.clone_context(@to_boundaries) == false}
        module={maybe_component(Bonfire.Boundaries.Web.SetCirclesPermissionsLive, @__context__)}
        to_boundaries={@to_boundaries}
        boundary_preset={@boundary_preset}
        create_object_type={:post}
        hide_breakdown
        id={"set_circle_permissions_" <> Ecto.UUID.generate()}
        click_override
        to_circles={@to_circles}
        exclude_circles={@exclude_circles}
      />
    </div> --}
    {!-- CREATE A NEW ONE --}
    <div :if={!@hide_custom} class="mt-1 pt-1 border-t border-base-content/10">
      <div class={
        "flex items-center gap-3 p-2 justify-between rounded-lg hover:bg-base-content/5",
        "bg-base-content/5": matches?(@boundary_preset, "custom")
      }>
        <button
          class="text-base-content"
          phx-click={JS.toggle(to: "#extra_boundaries")
          |> JS.toggle(to: "#composer_container")
          |> JS.push("Bonfire.Boundaries:replace_boundary",
            value: %{id: "custom", name: l("Custom")},
            target: "#smart_input"
          )}
          type="button"
        >
          <div class="flex items-center text-left">
            <div class="flex-shrink-0">
              <#Icon
                iconify="ri:settings-4-line"
                class={"w-5 h-5 text-base-content/70", "!w-4 !h-4": @is_dropdown}
              />
            </div>
            <div class="flex flex-col ml-3">
              <div class="text-sm font-semibold text-base-content/90">{l("Custom")}</div>
              <p class="text-xs text-base-content/70">{l("Specify custom boundaries, starting with a blank slate.")}</p>
            </div>
          </div>
        </button>
      </div>
    </div>
  </div>
  {!-- <Bonfire.UI.Boundaries.Web.BoundaryComposerActionsLive :if={!@is_dropdown} done_label={l("Back")} /> --}
</div>