{!-- <Bonfire.UI.Common.PageTitleLive page_title={@page_title} /> --}

<section class="bg-base-100 ">
  {#case @selected_tab}
    {#match "acl"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.AclLive, @__context__)}
        setting_boundaries={false}
        selected_tab="acls"
        id="acl"
        scope={@scope}
        acl_id={@current_params["id"]}
      />
    {#match "circles"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.MyCirclesLive, @__context__)}
        id="circles"
        scope={@scope}
      />
    {#match "circle"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.CircleMembersLive, @__context__)}
        selected_tab={@selected_tab}
        id="circle_members"
        scope={@scope}
        circle_id={@current_params["id"]}
      />
      <!-- {#match "admin_circle"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.CircleMembersLive, @__context__)}
        selected_tab={@selected_tab}
        id="view_circle"
        scope={@scope}
        show_add={false}
        read_only
        circle_id={Bonfire.Boundaries.Scaffold.Instance.admin_circle()}
      />
    {#match "mod_circle"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.CircleMembersLive, @__context__)}
        selected_tab={@selected_tab}
        id="view_circle"
        scope={@scope}
        show_add={maybe_apply(Bonfire.Me.Accounts, :is_admin?, [@__context__], fallback_return: nil) == true}
        read_only
        circle_id={Bonfire.Boundaries.Scaffold.Instance.mod_circle()}
      /> -->
    {#match "acls"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.MyAclsLive, @__context__)}
        selected_tab="acls"
        section={@current_params["section"]}
        id="acls"
        scope={@scope}
      />
    {#match "silenced"}
      <Bonfire.UI.Boundaries.BlocksLive id="blocks" selected_tab="silenced" title={l("Silenced Users")} />
    {#match "ghosted"}
      <Bonfire.UI.Boundaries.BlocksLive id="blocks" selected_tab="ghosted" title={l("Ghosted Users")} />
    {#match "instance_silenced"}
      <Bonfire.UI.Boundaries.BlocksLive
        scope={:instance_wide}
        id="blocks"
        selected_tab="silenced"
        name={l("Silenced instance-wide")}
        title={l("Silenced Users instance-wide")}
        description={l("Silenced users and instances are hidden from feeds and notifications on this instance. They won't appear in posts, mentions, or messages, but can still see public content.")}
      />
    {#match "instance_ghosted"}
      <Bonfire.UI.Boundaries.BlocksLive
        scope={:instance_wide}
        id="blocks"
        selected_tab="ghosted"
        name={l("Ghosted instance-wide")}
        title={l("Ghosted Users instance-wide")}
        description={l("Ghosted users and instances cannot see or interact with anyone on this instance. This is a stronger form of blocking where they are completely invisible to each other.")}
      />
      {!-- {#match "instance_circles"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.MyCirclesLive, @__context__)}
        id="circles"
        scope={:instance}
      />
    {#match "instance_acls"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.MyAclsLive, @__context__)}
        selected_tab="acls"
        id="my_acls"
        scope={:instance}
      /> --}
    {#match "instance_acl"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.AclLive, @__context__)}
        setting_boundaries={false}
        title={l("Instance permissions")}
        description={l("Define who can do what on this instance")}
        selected_tab="acls"
        id="acl"
        scope={:instance}
        usage={:ops}
        acl_id={Bonfire.Boundaries.Scaffold.Instance.instance_acl()}
      />
    {#match "roles"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.RolesLive, @__context__)}
        id="roles"
        scope={@scope}
      />
    {#match "default_roles"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.RolesLive, @__context__)}
        id="roles"
        scope={:instance}
        read_only
      />
    {#match "role"}
      <StatelessComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Boundaries.RoleLive, @__context__)}
        id="roles"
        scope={@scope}
      />
    {#match _}
      <div class="flex flex-col gap-8 divide-y divide-base-content/10">
        <StatefulComponent
          :if={current_user(@__context__)}
          module={maybe_component(Bonfire.UI.Boundaries.MyAclsLive, @__context__)}
          selected_tab="acls"
          id="acls"
          scope={@scope}
        />
        <div class="pt-4">
          <StatefulComponent
            :if={current_user(@__context__)}
            module={maybe_component(Bonfire.UI.Boundaries.MyCirclesLive, @__context__)}
            id="circles"
            scope={@scope}
          />
        </div>
        <div class="pt-4">
          <StatefulComponent
            :if={current_user(@__context__)}
            module={maybe_component(Bonfire.UI.Boundaries.RolesLive, @__context__)}
            id="roles"
            scope={@scope}
          />
        </div>
      </div>
  {/case}
</section>
